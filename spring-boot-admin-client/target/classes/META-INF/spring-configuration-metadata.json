{
  "hints": [],
  "groups": [
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client",
      "type": "de.codecentric.boot.admin.client.config.ClientProperties"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.InstanceProperties",
      "name": "spring.boot.admin.client.instance",
      "type": "de.codecentric.boot.admin.client.config.InstanceProperties"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.CloudFoundryApplicationProperties",
      "name": "vcap.application",
      "type": "de.codecentric.boot.admin.client.config.CloudFoundryApplicationProperties"
    }
  ],
  "properties": [
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.api-path",
      "description": "The admin rest-apis path.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.auto-deregistration",
      "description": "Enable automatic deregistration on shutdown If not set it defaults to true if a active {@link CloudPlatform} is present;",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.auto-registration",
      "description": "Enable automatic registration when the application is ready.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.connect-timeout",
      "description": "Connect timeout for the registration.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.enabled",
      "description": "Enable Spring Boot Admin Client.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.InstanceProperties",
      "name": "spring.boot.admin.client.instance.health-url",
      "description": "Client-health-URL to register with. Inferred at runtime, can be overridden in case the reachable URL is different (e.g. Docker). Must be unique all services registry.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.InstanceProperties",
      "name": "spring.boot.admin.client.instance.management-base-url",
      "description": "Base url for computing the management-url to register with. The path is inferred at runtime, and appended to the base url.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.InstanceProperties",
      "name": "spring.boot.admin.client.instance.management-url",
      "description": "Management-url to register with. Inferred at runtime, can be overridden in case the reachable URL is different (e.g. Docker).",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.InstanceProperties",
      "name": "spring.boot.admin.client.instance.metadata",
      "description": "Metadata that should be associated with this application",
      "type": "java.util.Map<java.lang.String,java.lang.String>"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.InstanceProperties",
      "name": "spring.boot.admin.client.instance.name",
      "description": "Name to register with. Defaults to ${spring.application.name}",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.InstanceProperties",
      "name": "spring.boot.admin.client.instance.prefer-ip",
      "description": "Should the registered urls be built with server.address or with hostname.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.InstanceProperties",
      "name": "spring.boot.admin.client.instance.service-base-url",
      "description": "Base url for computing the service-url to register with. The path is inferred at runtime, and appended to the base url.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.InstanceProperties",
      "name": "spring.boot.admin.client.instance.service-url",
      "description": "Client-service-URL register with. Inferred at runtime, can be overridden in case the reachable URL is different (e.g. Docker).",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.password",
      "description": "Password for basic authentication on admin server",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.period",
      "description": "Time interval the registration is repeated",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.read-timeout",
      "description": "Read timeout (in ms) for the registration.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.register-once",
      "description": "Enable registration against one or all admin servers",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.url",
      "description": "The admin server urls to register at",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.ClientProperties",
      "name": "spring.boot.admin.client.username",
      "description": "Username for basic authentication on admin server",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.CloudFoundryApplicationProperties",
      "name": "vcap.application.application-id",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.CloudFoundryApplicationProperties",
      "name": "vcap.application.instance-index",
      "type": "java.lang.String"
    },
    {
      "sourceType": "de.codecentric.boot.admin.client.config.CloudFoundryApplicationProperties",
      "name": "vcap.application.uris",
      "type": "java.util.List<java.lang.String>"
    }
  ]
}